@model HISSAP1.Models.Contract

@{
  ViewBag.Title = "Edit";
}

<h2 class="buddy-header">Edit Contract</h2>
<div class="buddy-link">
  @Html.ActionLink("Back to List", "Index")
</div>
@using (Html.BeginForm("Edit", "Contracts", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
  @Html.AntiForgeryToken()
  @Html.ValidationSummary(true)

  <div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
      @Html.LabelFor(model => model.ContractName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ContractName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ContractName, "", new { @class = "text-danger" })
      </div>
    </div>

    <!--Associate a provider with the account-->
    <div class="form-group">
      @Html.Label("Associate an Provider", new { @class = "col-md-2 control-label" })
      <div class="col-md-10">
        @*@Html.DropDownListFor(m => m.SelectedProvider, Model.ProviderList, "Please select")*@
        @Html.DropDownListFor(m => m.ContractsProviderId, ViewBag.Providers as SelectList, new { @class = "input-sm" })
      </div>
    </div>
    <!--Ends Here-->

    <div class="form-group">
      @Html.LabelFor(model => model.ContractNumber, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.Label("Status", new { @class = "col-md-2 control-label" })
      <div class="col-md-10">
        @{
          var list = new SelectList(
                          new List<Object>{
                               new { value = "Active" , text = "Active" },
                               new { value = "Inactive" , text = "Inactive" }
                            }, "value", "text", 2);
        }
        @Html.DropDownListFor(model => model.Status, list, new { @class = "input-sm" })
      </div>
    </div>

    @* FILE UPLOAD *@
    <div class="form-group">
      <div class="editor-label">
        <label>Files:</label>
      </div>
      <div class="editor-field">
        <input type="file" name="file" multiple="multiple" />

        <ul class="attachment">
          @foreach (var item in Model.ContractFiles)
        {
            <li>
              <a class="title" href="/Contracts/Download/?p=@(item.Id + item.Extension)&d=@item.FileName">@item.FileName</a>
              <a href="javascript:void(0);" data-id="@item.Id" class="deleteItem deleteContractFile">X</a>
            </li>
          }
        </ul>
      </div>
    </div>
    @* END - FILE UPLOAD *@


    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
  <script>
    $('.deleteContractFile').click(function (e) {
      e.preventDefault();
      var $ctrl = $(this);
      if (confirm('Do you really want to delete this file?')) {
        $.ajax({
          url: '@Url.Action("DeleteFile")',
          type: 'POST',
          data: { id: $(this).data('id') }
        }).done(function (data) {
          if (data.Result == "OK") {
            $ctrl.closest('li').remove();
          }
          else if (data.Result.Message) {
            alert(data.Result.Message);
          }
        }).fail(function () {
          alert("There is something wrong. Please try again.");
        })

      }
    });
  </script>
}
