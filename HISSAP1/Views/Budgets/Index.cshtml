@model IEnumerable<HISSAP1.Models.SiteModels.Budget>

@{
  ViewBag.Title = "Budget";
}

<h2 class="buddy-header">Budgets</h2>
<br />

@using (Html.BeginForm("CreateInitialBudget", "Budgets", new { returnUrl = Request.Url.AbsoluteUri }))
{
  //If no budgets make create button
  if (Model.Count() == 0)
  {
    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </div>
  }
}
<table class="table">
  <tr>
    <th>
      @Html.DisplayNameFor(model => model.Name)
    </th>
    <th>
      @Html.DisplayNameFor(model => model.DateCreated)
    </th>
    <th>
      @Html.DisplayNameFor(model => model.ContractNumber)
    </th>
    <th></th>
  </tr>
  @{
    var i = Model.Count();

    var x = 0;//Version
    var y = 0;//Revision

    //Count out the amount of each
    foreach (var item in Model)
    {
      if (item.BudgetStatus == "Submitted")
      {
        x++;
      }
      if (item.BudgetStatus == "New")
      {
        y++;
      }
    }



    var total = Model.Count();

  }
  @foreach (var item in Model)
  {
    //if (!(item.BudgetStatus == "New" && ViewBag.IsStateAdministrator))//Don't show budgets that are new/revisions to state administrators
    //{
    <tr>
      <td>
        @{
          string type = "";
          if (item.BudgetStatus == "Submitted")
          {
            type = "Version";
            @Html.ActionLink(@Html.DisplayFor(modelItem => item.Name) + " - " + type + " " + @x, "Details", new { id = item.Id })
            x--;
          }
          else if (item.BudgetStatus == "New")
          {
            type = "Revision";
            @Html.ActionLink(@Html.DisplayFor(modelItem => item.Name) + " - " + type + " " + @y, "Details", new { id = item.Id })
            y--;
          }
          else if (item.BudgetStatus == "Revision Requested")
          {
            type = "Revision Requested";
            @Html.ActionLink(@Html.DisplayFor(modelItem => item.Name) + " - " + type, "Details", new { id = item.Id })
          }
          else if (item.BudgetStatus == "Rejected")
          {
            type = "Rejected";
            @Html.ActionLink(@Html.DisplayFor(modelItem => item.Name) + " - " + type, "Details", new { id = item.Id })
          }
          else if (item.BudgetStatus == "Approved")
          {
            type = "Approved";
            @Html.ActionLink(@Html.DisplayFor(modelItem => item.Name) + " - " + type, "Details", new { id = item.Id })
          }
          else
          {
            @Html.ActionLink(@Html.DisplayFor(modelItem => item.Name) + "", "Details", new { id = item.Id })
          }
        }
      </td>
      <td>
        @Html.DisplayFor(modelItem => item.DateCreated)
      </td>
      <td>
        @Html.DisplayFor(modelItem => item.ContractNumber)
      </td>
      @* TODO: Apply all the validation in the controllers for what is done here *@
      <td style="text-align: center">
        @if ((ViewBag.CanPrepareBudget && (item.BudgetStatus != "Submitted" && item.BudgetStatus != "Rejected" && item.BudgetStatus != "Approved")) || ViewBag.IsSystemAdministrator /*Back-door*/)
        {
          if (i == total)
          {
            @Html.ActionLink("Modify", "Create", new { id = item.Id })
            @*@Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
              @Html.ActionLink("Details", "Details", new { id=item.Id })*@
            if (item.BudgetStatus != "Revision Requested")
            {
              <span>|</span>
              @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            }
          }
        }
      </td>
    </tr>
            //}
            i--;
          }

</table>
