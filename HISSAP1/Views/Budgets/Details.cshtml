@model HISSAP1.Models.SiteModels.Budget

@{
  ViewBag.Title = "Details";
}

<h2 class="buddy-header">Budget Details</h2>
<div class="buddy-link">
  @Html.ActionLink("Back to List", "Index")
</div>

<div id="edit-budget-content" class="form-horizontal">
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  @Html.HiddenFor(model => model.Id)
  <h3>Budget Information</h3>
  <div class="invoice-information">
    <div class="thumbnail budget-header">
      <div class="form-group" id="form-date-created">
        @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
        <br />
        @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
      </div>

      <div class="form-group" id="form-contract-number">
        @Html.LabelFor(model => model.ContractNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <br />
        @Html.EditorFor(model => model.ContractNumber, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.ContractNumber, "", new { @class = "text-danger" })
      </div>

      <div class="form-group" id="form-status">
        @Html.LabelFor(model => model.BudgetStatus, htmlAttributes: new { @class = "control-label col-md-2" })
        @*@Html.Label("Status", new { @class = "col-md-2 control-label" })*@
        <br />
        @*@{
          var list = new SelectList(
            new List<Object>{
                  new { value = "Accepted" , text = "Active" },
                  new { value = "Revision Requested" , text = "Revision Requested" },
                  new { value = "Rejected" , text = "Rejected" },
                  new { value = "Proposed" , text = "Proposed" },
                  new { value = "New" , text = "New" }
              }, "value", "text", 2);
        }
        @Html.DropDownListFor(model => model.BudgetStatus, list, new { @class = "input-sm", @disabled = "disabled" })*@
        @Html.EditorFor(model => model.BudgetStatus, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
      </div>
    </div>
    <table id="overview-budget-table" class="budget-table edit">
      <tr id="form-contract-amount">
        <td>
          @Html.LabelFor(model => model.TotalContractAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
          @Html.EditorFor(model => model.TotalContractAmount, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
          @Html.ValidationMessageFor(model => model.TotalContractAmount, "", new { @class = "text-danger" })
        </td>
      </tr>
      <tr id="form-total-expenses">
        <td>
          @Html.LabelFor(model => model.TotalExpenses, htmlAttributes: new { @class = "control-label col-md-2" })
        </td>
        <td>
          @Html.EditorFor(model => model.TotalExpenses, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
          @Html.ValidationMessageFor(model => model.TotalExpenses, "", new { @class = "text-danger" })
        </td>
      </tr>
      <tr id="form-total-expenses">
        <td>
          <label class="control-label">Balance</label>
        </td>
        <td>
          <input type="text" class="form-control value-add" disabled="disabled" value="" />
        </td>
      </tr>
    </table>
  </div>

  @* A. PERSONNEL COST *@

  <h3>Budget Expenses</h3>
  <table class="budget-table edit">
    <tr>
      <th>Expense Category</th>
      <th>Amount</th>
    </tr>
    <tr>
      <td>
        <label class="control-label section-label">A. PERSONNEL COST</label>
      </td>
      <td></td>
    </tr>
    <tr>
      <td>
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
      </td>
    </tr>

    <tr>
      <td>
        <label class="control-label" for="PayrollTaxesAssessmentTotal">
          <a href="@Url.Action("DetailsPayrollTaxesAssessment", "Budgets", new { id = Model.Id })">Payroll Taxes, Assessments</a>
        </label>                  
          @*@Html.LabelFor(model => model.PayrollTaxesAssessmentTotal, htmlAttributes: new { @class = "control-label col-md-2" })*@        
      </td>
      <td>
        @Html.EditorFor(model => model.PayrollTaxesAssessmentTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.PayrollTaxesAssessmentTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        <label class="control-label" for="FringeBenefitsTotal">
          <a href="@Url.Action("DetailsFringeBenefit", "Budgets", new { id = Model.Id })">Fringe Benefits</a>
        </label>      
        @*@Html.LabelFor(model => model.FringeBenefitsTotal, htmlAttributes: new { @class = "control-label col-md-2" })*@
      </td>
      <td>
        @Html.EditorFor(model => model.FringeBenefitsTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.FringeBenefitsTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.PersonnelCost, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.PersonnelCost, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.PersonnelCost, "", new { @class = "text-danger" })
      </td>
    </tr>

    @* B. OTHER CURRENT EXPENSES *@
    <tr>
      <td>
        <label class="control-label section-label">B. OTHER CURRENT EXPENSES</label>
      </td>
      <td></td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.AuditService, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.AuditService, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.AuditService, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        <label class="control-label" for="ContractualAdministraticeServicesTotal">
          <a href="@Url.Action("DetailsContractualAdministrativeService", "Budgets", new { id = Model.Id })">Contractual Services - Administrative</a>
        </label> 
        @*@Html.LabelFor(model => model.ContractualAdministrativeServicesTotal, htmlAttributes: new { @class = "control-label col-md-2" })*@
      </td>
      <td>
        @Html.EditorFor(model => model.ContractualAdministrativeServicesTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.ContractualAdministrativeServicesTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        <label class="control-label" for="ContractualSubcontractsServicesTotal">
          <a href="@Url.Action("DetailsContractualSubcontractsService", "Budgets", new { id = Model.Id })">Contractual Services - Subcontracts</a>
        </label> 
        @*@Html.LabelFor(model => model.ContractualSubcontractsServicesTotal, htmlAttributes: new { @class = "control-label col-md-2" })*@
      </td>
      <td>
        @Html.EditorFor(model => model.ContractualSubcontractsServicesTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.ContractualSubcontractsServicesTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.Insurance, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.Insurance, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.Insurance, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.LeaseRentalEquipment, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.LeaseRentalEquipment, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.LeaseRentalEquipment, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.LeaseRentalMotorVehicle, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.LeaseRentalMotorVehicle, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.LeaseRentalMotorVehicle, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.LeaseRentalSpace, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.LeaseRentalSpace, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.LeaseRentalSpace, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.PostageFreightDelivery, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.PostageFreightDelivery, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.PostageFreightDelivery, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.PublicationPrinting, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.PublicationPrinting, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.PublicationPrinting, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.RepairMaintenance, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.RepairMaintenance, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.RepairMaintenance, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.StaffTraining, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.StaffTraining, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.StaffTraining, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.Supplies, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.Supplies, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.Supplies, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.Telecommunication, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.Telecommunication, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.Telecommunication, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.Utilities, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.Utilities, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.Utilities, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.ProgramActivities, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.ProgramActivities, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.ProgramActivities, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.IndirectCost, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.IndirectCost, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.IndirectCost, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        <label class="control-label" for="OtherTotal">
          <a href="@Url.Action("DetailsOther", "Budgets", new { id = Model.Id })">Other</a>
        </label> 
        @*@Html.LabelFor(model => model.OtherTotal, htmlAttributes: new { @class = "control-label col-md-2" })*@
      </td>
      <td>
        @Html.EditorFor(model => model.OtherTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.OtherTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.OtherCurrentExpenses, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.OtherCurrentExpenses, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.OtherCurrentExpenses, "", new { @class = "text-danger" })
      </td>
    </tr>

    @* C. TRANSPORTATION *@
    <tr>
      <td>
        <label class="control-label section-label">C. TRANSPORTATION</label>
      </td>
      <td></td>
    </tr>

    <tr>
      <td>
        <label class="control-label" for="AirfareTotal">
          <a href="@Url.Action("DetailsAirfare", "Budgets", new { id = Model.Id })">Airfare</a>
        </label> 
        @* TODO: Make both inter and outer here... *@
        @*@Html.LabelFor(model => model.AirfareTotal, htmlAttributes: new { @class = "control-label col-md-2" })*@
      </td>
      <td>
        @Html.EditorFor(model => model.AirfareTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.AirfareTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    @*<tr>
      <td>
        @Html.LabelFor(model => model.AirfareInterIslandTotal, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.AirfareInterIslandTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.AirfareInterIslandTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.AirfareOutStateTotal, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.AirfareOutStateTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.AirfareOutStateTotal, "", new { @class = "text-danger" })
      </td>
    </tr>*@

    <tr>
      <td>
        @Html.LabelFor(model => model.Transportation, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.Transportation, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.Transportation, "", new { @class = "text-danger" })
      </td>
    </tr>

    @* D. Subsistence/Per Diem *@
    <tr>
      <td>
        <label class="control-label section-label">D. SUBSISTENCE/PER DIEM</label>
      </td>
      <td></td>
    </tr>

    <tr>
      <td>
        <label class="control-label" for="SubsistencePerDiemTotal">
          <a href="@Url.Action("DetailsSubsistencePerDiem", "Budgets", new { id = Model.Id })">Subsistence/Per Diem</a>
        </label>
        @*@Html.LabelFor(model => model.SubsistencePerDiemTotal, htmlAttributes: new { @class = "control-label col-md-2" })*@
      </td>
      <td>
        @Html.EditorFor(model => model.SubsistencePerDiemTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.SubsistencePerDiemTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    @* E. Equipment Purchases *@
    <tr>
      <td>
        <label class="control-label section-label">E. EQUIPMENT PURCHASES</label>
      </td>
      <td></td>
    </tr>

    <tr>
      <td>
        <label class="control-label" for="EquipmentPurchaseTotal">
          <a href="@Url.Action("DetailsEquipmentPurchase", "Budgets", new { id = Model.Id })">Equipment Purchases</a>
        </label>
        @*@Html.LabelFor(model => model.EquipmentPurchasesTotal, htmlAttributes: new { @class = "control-label col-md-2" })*@
      </td>
      <td>
        @Html.EditorFor(model => model.EquipmentPurchasesTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.EquipmentPurchasesTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    @* F. Motor Vehicle Purchases *@
    <tr>
      <td>
        <label class="control-label section-label">F. MOTOR VEHICLE PURCHASES</label>
      </td>
      <td></td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.MotorVehiclePurchasesTotal, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.MotorVehiclePurchasesTotal, new { htmlAttributes = new { @class = "form-control value-add", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.MotorVehiclePurchasesTotal, "", new { @class = "text-danger" })
      </td>
    </tr>

    <tr>
      <td>
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
      </td>
      <td>
        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @id = "dummy-SumTotal", @class = "form-control", @disabled = "disabled" } })
        @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
      </td>
    </tr>

  </table>
</div>

<p>
  @Html.ActionLink("Back to List", "Index")
</p>
@section Scripts {
  <script>
    calculateSumTotal();

    $("input.value-add").change(function () {
      calculateSumTotal();
    });

    function calculateSumTotal() {
      var sum = $("#SumTotal, #dummy-SumTotal, #TotalExpenses");
      var total = 0;
      $("input.value-add").each(function () {
        item = Number($(this).val().trim());
        if (item != null && !isNaN(item)) {
          total += item;
        }
      });
      $(sum).val(total);
    }
  </script>
}