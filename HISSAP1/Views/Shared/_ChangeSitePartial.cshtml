@model HISSAP1.Models.CurrentSite

@if (Request.IsAuthenticated)
{
  //Html.Action("Edit", "CurrentSites");
  using (Html.BeginForm("Switch", "CurrentSites", new { returnUrl = Request.Url.AbsoluteUri }))
  {
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.UserId)
    <a href="">@Html.DisplayFor(model => model.Site.SiteName)<b><span class="arrow-down">&#9662;</span></b></a>
    <div class="drop-down select-site">
      @* Only used to filter the Contracts *@
      <div class="form-group inline-block">
        @Html.Label("Provider: ", new { @class = "control-label col-md-2" })
        @*@Html.DropDownListFor(m => m.Site.SitesContract.ContractsProvider, (SelectList)ViewBag.Providers, new { @class = "input-sm" })*@
        @Html.DropDownList("SelectedProvider", null, htmlAttributes: new { @class = "input-sm", @onchange = "FillContract()" })
      </div>

      @* Only used to filter the Sites *@
      <div class="form-group inline-block">
        @Html.Label("Contract: ", new { @class = "control-label col-md-2" })
        @*@Html.DropDownListFor(m => m.Site.SitesContract, (SelectList)ViewBag.Contracts, new { @class = "input-sm", @onchange = "FillSite()" })*@
        @Html.DropDownList("SelectedContract", null, htmlAttributes: new { @class = "input-sm", @onchange = "FillSite()" })
        
      </div>

      <div class="form-group inline-block">
        @*@Html.LabelFor(model => model.SelectedSite, "SelectedSite", htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label("Site: ", new { @class = "control-label col-md-2" })
        @*@Html.DropDownListFor(m => m.Site, (SelectList)ViewBag.Sites, new { @class = "input-sm" })*@
        @Html.DropDownList("SelectedSite", null, htmlAttributes: new { @class = "input-sm" })          
      </div>
      <div id="change-site-input" class="form-group inline-block">
        <input class="btn btn-default" value="Switch" type="submit" />
      </div>
    </div>
  }
}